---
import type { CollectionEntry } from 'astro:content';
import Header from '@/components/layout/Header';
import Footer from '@/components/layout/Footer';
import { Toaster } from "@/components/ui/toaster";
import { Work_Sans } from 'next/font/google'; // This needs to be replaced or handled differently in Astro
import '@/styles/globals.css';

// Astro does not use next/font directly. You'd typically load fonts via CSS or a <link> tag.
// For Work_Sans, we'll assume it's loaded globally via CSS or a font provider setup.
// If Work_Sans was being used to set a CSS variable like --font-work-sans, that needs to be set in globals.css
// or directly on the body tag. The className={`${workSans.variable} font-sans antialiased`} part is specific to next/font.

export interface Props {
	title?: string;
	description?: string;
}

const { 
  title = 'Cozy Coder Portfolio | Raghavendra Hande', 
  description = "Raghavendra Hande's personal portfolio showcasing projects, blog, and skills." 
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" type="image/svg+xml" href="/favicon.svg" /> {/* Replace with your actual favicon */}
	<meta name="generator" content={Astro.generator} />
	<title>{title}</title>
  <meta name="description" content={description} />
  {/* Setup for Work Sans font - typically done in globals.css or by linking in head */}
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Work Sans', sans-serif;
    }
  </style>
</head>
<body class="font-sans antialiased">
  <Header client:load /> {/* client:load ensures React component interactivity */}
  <main class="min-h-screen">
    <slot /> {/* Page content will be injected here */}
  </main>
  <Footer client:load />
  <Toaster client:load /> {/* Toaster needs client-side JS */}
</body>
</html>